datasource db {
  provider             = "mongodb"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model UserAccount {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  account_name String   @unique
  email        String   @unique
  created_at   DateTime @default(now())
  photoUrl     String?
  user         User[]
  owner        String   @db.ObjectId
  links        Json?
  page         page?    @relation(fields: [pageId], references: [id])
  pageId       String?  @unique @db.ObjectId
  bucket       bucket?  @relation(fields: [bucketId], references: [id])
  bucketId     String?  @unique @db.ObjectId
  board        board?   @relation(fields: [boardId], references: [id])
  boardId      String?  @unique @db.ObjectId
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  email         String       @unique
  account       UserAccount? @relation(fields: [userAccountId], references: [id])
  auth          Auth         @relation(fields: [authId], references: [id])
  authId        String       @unique @db.ObjectId
  userAccountId String?      @unique @db.ObjectId
  name          String
  photoUrl      String?
}

model Auth {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  passHash String
  salt     String
  user     User?
}

model page {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  route         String      @unique
  template      Json
  userAccountId String       @unique @db.ObjectId
  UserAccount   UserAccount?
}

model bucket {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  files         Json[]
  userAccountId String       @unique @db.ObjectId
  UserAccount   UserAccount?
  bucketRef     String
}

model board {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  items         item[]
  userAccountId String       @unique @db.ObjectId
  UserAccount   UserAccount?
}

model item {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  priority    String
  script      String
  reference   String
  storage     String
  prefix      String
  created_at  String
  board       board?  @relation(fields: [boardId], references: [id])
  boardId     String? @db.ObjectId
}
